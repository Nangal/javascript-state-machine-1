{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 02afdbff5bc9a28191b2","webpack:///./src/StateMachine.js","webpack:///./src/utils/ValueMap.js","webpack:///./src/utils/utils.js","webpack:///./src/Transition.js","webpack:///./src/Events.js"],"names":["StateMachine","target","config","state","states","transitions","actions","handlers","initialize","update","console","log","prototype","transition","addStates","events","initial","map","event","matches","match","name","from","op","to","add","hasOwnProperty","handler","type","param","onStart","onEnd","onLeave","onEnter","debug","warn","defer","info","data","change","fn","do","action","can","rest","create","exec","go","has","getActionForState","cannot","is","indexOf","getStatesFor","getActionsFor","Object","keys","asMap","get","isStarted","isFinished","final","isTransitioning","isPaused","paused","pause","resume","cancel","clear","complete","reset","set","remove","onChange","addHandler","off","fsm","key","addState","push","verb","length","subject","Error","insert","join","ValueMap","path","value","undefined","values","obj","shift","index","String","split","pop","parent","arr","splice","isObject","isArray","isString","isFunction","isDefined","isUndefined","trim","toString","call","Array","Function","replace","Transition","callbacks","defaultOrder","order","params","apply","concat","bind","queue","token","test","setOrder","getOrder","ActionEvent","StateEvent","ChangeEvent","noop"],"mappings":"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","file":"state-machine.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"StateMachine\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StateMachine\"] = factory();\n\telse\n\t\troot[\"StateMachine\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 02afdbff5bc9a28191b2\n **/","import ValueMap from './utils/ValueMap';\nimport Transition from './Transition';\nimport { ChangeEvent } from './Events';\nimport { isString, isArray, isFunction } from './utils/utils';\n\nexport default function StateMachine (target, config)\n{\n    this.target         = target;\n    this.state          = '';\n    this.states         = [];\n    this.transitions    = new ValueMap();\n    this.actions        = new ValueMap();\n    this.handlers       = new ValueMap();\n    if(config)\n    {\n        this.initialize(config);\n        this.update('started');\n    }\n    console.log('hello there');\n}\n\n/**\n * StateMachine prototype\n *\n * The property examples below illustrate a 4-state machine, with states:\n *\n * - intro > settings > summary > end\n *\n * And actions:\n *\n * - back | next | restart | finish\n */\nStateMachine.prototype =\n{\n    // ------------------------------------------------------------------------------------------------\n    // properties\n\n        /**\n         * Available state names\n         *\n         * - [\n         *     intro,\n         *     settings,\n         *     summary,\n         *     final\n         *   ]\n         *\n         * @var {string[]}\n         */\n        states      : null,\n\n        /**\n         * Available transitions for each action\n         *\n         * action.from => to\n         *\n         * - next: {\n         *     intro: settings,\n         *     settings: summary\n         *   },\n         * - back: {\n         *     settings: intro\n         *   },\n         * - restart: {\n         *     summary:intro\n         *   },\n         * - finish: {\n         *     summary:final\n         *   },\n         *\n         * Transitions can also be functions\n         *\n         * - next: {\n         *     intro: function() { return '<random state>' } // jump to a random state\n         *   }\n         *\n         * @var {ValueMap}\n         */\n        transitions : null,\n\n        /**\n         * Actions that are available to be called from each state\n         *\n         * state => [ action, action, ... ]\n         *\n         * - intro: [\n         *     'next'\n         *   ],\n         * - settings: [\n         *     'next',\n         *     'back'\n         *   ],\n         * - summary: [\n         *     'restart'\n         *     'finish',\n         *   ]\n         *\n         * Actions can also be expressed as wildcards\n         *\n         * - intro: [\n         *     '*' // any action is allowed from intro\n         *   ]\n         *\n         * @var {ValueMap}\n         */\n        actions     : null,\n\n        /**\n         * Handler functions that should be called on each action event / state change\n         *\n         * name.type => [ handler, handler, ... ]\n         *\n         * - next: {\n         *   - start: [\n         *       hideModal\n         *     ],\n         *   - end: [\n         *       showModal\n         *     ]\n         *   },\n         * - summary: {\n         *   - enter: [\n         *       resetForm\n         *     ],\n         *   - leave: [\n         *       validateForm,\n         *       postData,\n         *     ]\n         *   },\n         *   ...\n         *\n         * @var {ValueMap}\n         */\n        handlers   : null,\n\n        /**\n         * The current state\n         *\n         * @var {string}\n         */\n        state       : '',\n\n        /**\n         * Any active Transition object that is driving the state change\n         *\n         * @var {Transition}\n         */\n        transition  : null,\n\n        /**\n         * The target context in which to call all handlers\n         *\n         * @var {*}\n         */\n        target      : null,\n\n        /**\n         * The original config object\n         *\n         * @var {Object}\n         */\n        config      : null,\n\n\n    // ------------------------------------------------------------------------------------------------\n    // private methods\n\n        /**\n         * Initialize the FSM with a config object\n         *\n         * @private\n         * @param config\n         */\n        initialize:function (config)\n        {\n            // assign config\n            this.config     = config;\n\n            // parse all states\n            addStates(this, 'from', config.events);\n            addStates(this, 'to', config.events);\n\n            // initial state\n            if( ! config.initial )\n            {\n                config.initial = this.states[0];\n            }\n\n            // add transitions\n            config.events.map( event =>\n            {\n                // shorthand\n                if(isString(event))\n                {\n                    let matches = event.match(/(\\w+)\\s*[\\|:=]\\s*(\\w+)\\s*([<>-])\\s*(\\w.*)/);\n                    let [,name, from, op, to] = matches;\n                    if(op === '-')\n                    {\n                        this.add(name, from, to);\n                        this.add(name, to, from);\n                        return;\n                    }\n                    if(op === '<')\n                    {\n                        [from, to] = [to, from];\n                    }\n                    this.add(name, from, to);\n                }\n\n                // keys\n                else\n                {\n                    this.add(event.name, event.from, event.to);\n                }\n            });\n\n            // add handlers\n            for(let name in config.handlers)\n            {\n                if(config.handlers.hasOwnProperty(name))\n                {\n                    var handler    = config.handlers[name];\n                    var matches     = name.match(/(\\w+)\\s*(.*)/);\n                    if(matches)\n                    {\n                        let [, type, param] = matches;\n                        switch(type)\n                        {\n                            case 'start'    :this.onStart(param, handler); break;\n                            case 'end'      :this.onEnd(param,   handler); break;\n                            case 'leave'    :this.onLeave(param, handler); break;\n                            case 'enter'    :this.onEnter(param, handler); break;\n                            default:\n                                this.config.debug && console.warn('Warning processing handlers config: unknown action type \"' +type+ '\"');\n                        }\n                    }\n                    else\n                    {\n                        this.config.debug && console.warn('Warning processing handlers config: unable to parse action key \"' +name+ '\"');\n                    }\n                }\n            }\n\n            // state\n            if( ! config.defer )\n            {\n                this.state = config.initial;\n            }\n\n        },\n\n        /**\n         * Dispatch an update event\n         *\n         * @param type\n         */\n        update: function (type)\n        {\n            this.config.debug && console.info('StateMachine update \"%s\"', type);\n            let handlers = this.handlers.data.change;\n            if(handlers)\n            {\n                let event = new ChangeEvent(type);\n                handlers.map(fn => fn(event) );\n            }\n        },\n\n\n    // ------------------------------------------------------------------------------------------------\n    // api\n\n        /**\n         * Attempt to run an action, resulting in a transition to a state\n         *\n         * @param   {string}    action\n         * @param   {*[]}       rest\n         * @returns {boolean}\n         */\n        do: function (action, ...rest)\n        {\n            if(this.can(action))\n            {\n                this.config.debug && console.info('Doing action \"%s\"', action);\n                this.transition = Transition.create(this, action, rest);\n                this.update('transitioning');\n                this.transition.exec();\n                return true;\n            }\n            return false;\n        },\n\n        /**\n         * Attempt to go to a state\n         *\n         * Finds if an appropriate transition exists, then calls the related action if it does\n         *\n         * @param   {string}    state\n         * @returns {boolean}\n         */\n        go: function (state)\n        {\n            if(this.has(state))\n            {\n                var action = this.getActionForState(state);\n                if(action)\n                {\n                    return this.do(action);\n                }\n                this.config.debug && console.info('No transition exists from \"%s\" to \"%s\"', this.state, state);\n            }\n            else\n            {\n                this.config.debug && console.warn('No such state \"%s\"', state);\n            }\n            return false;\n        },\n\n        /**\n         * Query a transition to see if a named action is available\n         *\n         * @param   {string}    action\n         * @returns {boolean}\n         */\n        can: function (action)\n        {\n            if( ! this.actions.has(action) )\n            {\n                this.config.debug && console.warn('No such action \"%s\"', action);\n            }\n            return !! this.transitions.has(this.state, action);\n        },\n\n        /**\n         * Query a transition to see if a named action is unavailable\n         *\n         * @param   {string}    action\n         * @returns {boolean}\n         */\n        cannot: function (action)\n        {\n            return ! this.can(action);\n        },\n\n        /**\n         * Test if the current state is the same as the supplied one\n         *\n         * @param   {string}    state       A state name to compare against the current state\n         * @returns {boolean}\n         */\n        is: function (state)\n        {\n            if(this.states.indexOf(state) === -1)\n            {\n                this.config.debug && console.warn('No such state \"%s\"', state);\n            }\n            return state === this.state;\n        },\n\n        /**\n         * Test if a state exists\n         *\n         * @param   {string}    state\n         * @return  {boolean}\n         */\n        has: function(state)\n        {\n            return this.states.indexOf(state) !== -1;\n        },\n\n        /**\n         * Get the available \"to\" states for the current or supplied state\n         *\n         * @param   {string}    [state]     Optional name of a state to get states for. Defaults to the current state\n         * @returns {string[]}              An array of string states\n         */\n        getStatesFor: function (state = null)\n        {\n            state       = state || this.state;\n            let actions = this.getActionsFor(state, true);\n            return Object.keys(actions).map( name => actions[name] );\n        },\n\n        /**\n         * Get the available actions (or actions and states) for the current or supplied state\n         *\n         * @param   {string}    [state]     Optional name of a state to get actions for. Defaults to the current state\n         * @param   {boolean}   [asMap]     Optional boolean to return a Object of action:state properties. Defaults to false\n         * @returns {string[]|Object}       An array of string actions, or a hash of action:states\n         */\n        getActionsFor: function (state = null, asMap = false)\n        {\n            state       = state || this.state;\n            let actions = this.transitions.get(state || this.state);\n            if(asMap)\n            {\n                let states  = {};\n                actions.map( action =>\n                {\n                    states[action] = this.actions.get(action + '.' + state);\n                });\n                return states;\n            }\n            else\n            {\n                return actions;\n            }\n        },\n\n        getActionForState: function (state)\n        {\n            if(this.has(state))\n            {\n                let actions = this.getActionsFor(null, true);\n                for(let action in actions)\n                {\n                    if(actions[action] === state)\n                    {\n                        return action;\n                    }\n                }\n            }\n            return null\n        },\n\n\n    // ------------------------------------------------------------------------------------------------\n    // flags\n\n        /**\n         * Test if the FSM has started\n         *\n         * @returns {boolean}\n         */\n        isStarted: function ()\n        {\n            return this.state !== '';\n        },\n\n        /**\n         * Test if the FSM is on the \"final\" state\n         *\n         * @returns {boolean}\n         */\n        isFinished: function ()\n        {\n            return this.state === this.config.final;\n        },\n\n        /**\n         * Test if the FSM is transitioning\n         *\n         * @returns {boolean}\n         */\n        isTransitioning: function ()\n        {\n            return !! this.transition;\n        },\n\n        /**\n         * Test if the FSM is paused (whilst transitioning)\n         *\n         * @returns {boolean}\n         */\n        isPaused: function ()\n        {\n            return this.transition\n                ? this.transition.paused\n                : false;\n        },\n\n\n    // ------------------------------------------------------------------------------------------------\n    // transitions\n\n        /**\n         * Pause any current transition\n         *\n         * @returns {StateMachine}\n         */\n        pause: function ()\n        {\n            if(this.transition)\n            {\n                this.transition.pause();\n                this.update('paused');\n            }\n            return this;\n        },\n\n        /**\n         * Resume any current transition\n         *\n         * @returns {StateMachine}\n         */\n        resume: function ()\n        {\n            if(this.transition)\n            {\n                this.update('resumed');\n                this.transition.resume();\n            }\n            return this;\n        },\n\n        /**\n         * Cancel any current transition\n         *\n         * @returns {StateMachine}\n         */\n        cancel: function ()\n        {\n            if(this.transition)\n            {\n                this.state = this.transition.from;\n                this.transition.clear();\n                delete this.transition;\n                this.update('cancelled');\n            }\n            return this;\n        },\n\n        /**\n         * Complete any current transition, skipping remaining handlers\n         *\n         * @returns {StateMachine}\n         */\n        complete: function ()\n        {\n            if(this.transition)\n            {\n                this.state = this.transition.to;\n                this.transition.clear();\n                delete this.transition;\n                this.update('transitioned');\n                if(this.isFinished())\n                {\n                    this.update('finished');\n                }\n            }\n            return this;\n        },\n\n        /**\n         * Reset the FSM to the initial, or supplied, state\n         *\n         * @returns {StateMachine}\n         */\n        reset:function(initial)\n        {\n            this.state = initial || this.config.initial;\n            if(this.transition)\n            {\n                this.transition.clear();\n                delete this.transition;\n            }\n            this.update('reset');\n            return this;\n        },\n\n\n    // ------------------------------------------------------------------------------------------------\n    // actions\n\n        /**\n         * Add a transition event\n         *\n         * @param   {string}    action\n         * @param   {string}    from\n         * @param   {string}    to\n         * @return  {StateMachine}\n         */\n        add: function (action, from, to)\n        {\n            this.actions.set(action + '.' + from, to);\n            this.transitions.add(from, action);\n            return this;\n        },\n\n        remove: function (action, from, to)\n        {\n            this.states.remove(action, from);\n        },\n\n\n    // ------------------------------------------------------------------------------------------------\n    // handlers\n\n        onChange: function (fn)\n        {\n            this.handlers.add('change', fn);\n            return this;\n        },\n\n        onStart: function (action, fn)\n        {\n            addHandler(this, 'action', 'start', action, fn);\n            return this;\n        },\n\n        onEnd: function (action, fn)\n        {\n            addHandler(this, 'action', 'end', action, fn);\n            return this;\n        },\n\n        onEnter: function (state, fn)\n        {\n            addHandler(this, 'state', 'enter', state, fn);\n            return this;\n        },\n\n        onLeave: function (state, fn)\n        {\n            addHandler(this, 'state', 'leave', state, fn);\n            return this;\n        },\n\n        off: function (type, target, fn)\n        {\n            return this;\n        }\n\n}\n\n/**\n * Parses config and adds unique state names to states array\n *\n * @param {StateMachine}    fsm\n * @param {string}          key\n * @param {Object[]}        transitions\n */\nfunction addStates(fsm, key, transitions)\n{\n    transitions.map( event => addState(fsm, event[key]) );\n}\n\nfunction addState (fsm, state)\n{\n    if (isString(state) && fsm.states.indexOf(state) === -1)\n    {\n        fsm.states.push(state);\n    }\n}\n\n/**\n * Generic function to parse action and add callback\n *\n * @param {StateMachine}    fsm\n * @param {string}          type\n * @param {string}          verb\n * @param {string|Function} rest\n */\nfunction addHandler(fsm, type, verb, ...rest)\n{\n    // params\n    if(rest.length === 1)\n    {\n        rest = ['*', rest[0]];\n    }\n    let [param, fn] = rest;\n\n    // parse states\n    let states = isArray(param)\n        ? param\n        : param == ''\n            ? ['*']\n            : param.match(/\\*|\\w+[-\\w]+/g);\n\n    // assign handlers\n    states.map( subject =>\n    {\n        // warn for invalid actions / states\n        if(subject !== '*')\n        {\n            if(type === 'state' && fsm.states.indexOf(subject) === -1)\n            {\n                fsm.config.debug && console.warn('Warning assigning state.%s handler: no such state \"%s\"', verb, subject);\n            }\n            else if(type === 'action' && ! fsm.transitions.has(subject))\n            {\n                fsm.config.debug && console.warn('Warning assigning action.%s handler: no such action \"%s\"', verb, subject);\n            }\n        }\n\n        // check handler is a function\n        if( ! isFunction(fn) )\n        {\n            throw new Error('Error assigning ' +verb+ '.' +subject+ ' handler; callback is not a Function', fn);\n        }\n\n        // assign\n        fsm.handlers.insert([type, subject, verb].join('.'), fn);\n    });\n}\n\n/*\n// event libs\nhttps://www.npmjs.com/package/event-box\nhttps://www.npmjs.com/package/dispatchy\n*/\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/StateMachine.js\n **/","import {isObject, isArray, isDefined, isUndefined} from './utils';\n\n/**\n * Utility class to create, modify and delete nested hashes and values\n *\n * @constructor\n */\nexport default function ValueMap (data)\n{\n    this.data = data || {};\n}\n\nValueMap.prototype =\n{\n    data: null,\n\n    set: function (path, value)\n    {\n        set(this.data, path, value);\n        return this;\n    },\n\n    add:function(path, value)\n    {\n        add(this.data, path, value);\n        return this;\n    },\n\n    insert:function(path, value)\n    {\n        insert(this.data, path, value);\n        return this;\n    },\n\n    get:function(path)\n    {\n        return get(this.data, path);\n    },\n\n    has: function (path, value = undefined)\n    {\n        return has(this.data, path, value)\n    },\n\n    indexOf: function (path, value)\n    {\n        return indexOf(this.data, path, value)\n    },\n\n    remove: function (path, value = undefined)\n    {\n        remove(this.data, path, value);\n        return this;\n    },\n\n    keys:function(path)\n    {\n        return Object.keys(get(this.data, path));\n    },\n\n    values:function(path)\n    {\n        return values(this.data, path);\n    }\n\n};\n\nfunction create(obj, keys)\n{\n    let key;\n    while(keys.length)\n    {\n        key = keys.shift();\n        if( ! isObject(obj[key]) )\n        {\n            obj[key] = {};\n        }\n        obj = obj[key];\n    }\n    return obj;\n}\n\nexport function set(obj, path, value, index = -1)\n{\n    let keys = String(path).split('.'),\n        key  = keys.pop();\n    obj = create(obj, keys);\n    obj[key] = value;\n}\n\nfunction add(obj, path, value)\n{\n    let keys = String(path).split('.'),\n        key  = keys.pop();\n    obj = create(obj, keys);\n    if( ! isArray(obj[key]) )\n    {\n        obj[key] = [];\n    }\n    obj[key].push(value);\n}\n\nfunction insert(obj, path, value)\n{\n    let keys = String(path).split('.'),\n        key  = keys.pop();\n    obj = create(obj, keys);\n    if( ! isArray(obj[key]) )\n    {\n        obj[key] = [];\n    }\n    let parent = obj[key],\n        index = parent.indexOf(value);\n    if(index === -1)\n    {\n        parent.push(value);\n    }\n    else\n    {\n        parent[index] = value;\n    }\n}\n\nexport function get(obj, path)\n{\n    if(isUndefined(path) || path == '')\n    {\n        return obj;\n    }\n\n    let key,\n        keys = String(path).split('.');\n    while(keys.length > 1)\n    {\n        key = keys.shift();\n        if( ! obj.hasOwnProperty(key) )\n        {\n            return;\n        }\n        obj = obj[key];\n    }\n    key = keys.shift();\n    return obj[key];\n}\n\nexport function has(obj, path, value)\n{\n    let parent = get(obj, path);\n    return !! (isArray(parent) && isDefined(value)\n        ? parent.indexOf(value) !== -1\n        : isUndefined(value)\n            ? isDefined(parent)\n            : parent === value);\n}\n\nexport function indexOf (obj, path, value)\n{\n    let arr = get(obj, path);\n    if(isArray(arr))\n    {\n        return arr.indexOf(value);\n    }\n    return -1;\n}\n\nexport function remove(obj, path, value)\n{\n    let parent = obj,\n        keys = String(path || '').split('.'),\n        key = keys.pop();\n\n    if(keys.length)\n    {\n        parent = get(obj, keys.join('.'))\n    }\n    if(isDefined(value) && isArray(parent[key]))\n    {\n        parent = parent[key];\n        var index = parent.indexOf(value);\n        if(index > -1)\n        {\n            parent.splice(index, 1);\n            return true;\n        }\n        return false;\n    }\n    else\n    {\n        if(isObject(parent) && obj.hasOwnProperty(key))\n        {\n            delete parent[key];\n            return true;\n        }\n    }\n    return false\n}\n\nexport function values(obj, path)\n{\n    var values = [];\n    var target = get(obj, path);\n    if(isObject(target))\n    {\n        for(var name in target)\n        {\n            if(target.hasOwnProperty(name))\n            {\n                values.push(target[name]);\n            }\n        }\n    }\n    return values;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/utils/ValueMap.js\n **/","export function isObject (value)\n{\n    return Object.prototype.toString.call(value) === '[object Object]';\n}\n\nexport function isArray (value)\n{\n    return value instanceof Array;\n}\n\nexport function isString (value)\n{\n    return typeof value === 'string';\n}\n\nexport function isFunction(value)\n{\n    return value instanceof Function;\n}\n\nexport function isDefined (value)\n{\n    return typeof value !== 'undefined';\n}\n\nexport function isUndefined (value)\n{\n    return typeof value === 'undefined';\n}\n\nexport function trim (value)\n{\n    return String(value || '').replace(/^\\s+|\\s+$/g, '');\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/utils/utils.js\n **/","import Events from './Events';\nimport { isFunction } from './utils/utils';\n\n/**\n * Transition class\n *\n * Responsible for managing events in the flow from state to state.\n *\n * The default dispatch order for all transitions is:\n *\n * - '*.start'\n * - ':action.start'\n * - ':state.leave'\n * - '*.leave'\n * - '*.enter'\n * - ':state.enter'\n * - ':action.end'\n * - '*.end'\n *\n * This can be changed by calling Transition.setOrder( ... )\n *\n * Event handlers will receive an Event object, along with any passed parameters (from do()) as ...rest parameters.\n *\n * From a callback, you can:\n *\n * - return false to cancel the transition\n * - return true to pause the transition\n * - not return a value (the transition continues)\n *\n * All transitions can be paused, resumed, cancelled or completed by calling\n * the appropriate method on, or from:\n *\n * - the event\n * - the transition\n * - the state machine\n *\n * Cancelled transitions will reset teh FSM to the previous \"from\" state, and completed transitions will advance\n * the FSM to the passed \"to\" state.\n *\n * When the last callback has fired, the main FSM's complete() handler will be called and the state will update\n *\n * @param {string}          action\n * @param {string}          from\n * @param {string}          to\n * @param {Function[]}      handlers\n * @param {Object}          callbacks\n * @constructor\n */\nfunction Transition (action, from, to, handlers, callbacks)\n{\n    this.action     = action;\n    this.from       = from;\n    this.to         = to;\n    this.handlers   = handlers;\n    this.callbacks  = callbacks;\n}\n\nTransition.prototype =\n{\n    action      : '',\n    from        : '',\n    to          : '',\n    handlers    : null,\n    callbacks   : null,\n    paused      : false,\n\n    clear: function ()\n    {\n        this.paused = false;\n        this.handlers = [];\n    },\n\n    /**\n     * Execute the next event's callbacks\n     * @returns {*}\n     */\n\texec: function ()\n\t{\n\t    if( ! this.paused )\n        {\n            if(this.handlers.length)\n            {\n                var handler = this.handlers.shift();\n                var state = handler();\n                if(state === false)\n                {\n                    return this.callbacks.cancel();\n                }\n                if(state === true)\n                {\n                    return this.callbacks.pause();\n                }\n                this.exec();\n            }\n            else\n            {\n                this.callbacks.complete();\n            }\n        }\n        return this;\n\t},\n\n    pause: function ()\n    {\n        this.paused = true;\n        return this;\n    },\n\n    resume: function ()\n    {\n        this.paused = false;\n        return this.exec();\n    }\n};\n\n/**\n *\n * @type {string[]} subject.verb\n */\nlet defaultOrder = [\n    '*.start',\n    'action.start',\n    'from.leave',\n    '*.leave',\n    '*.enter',\n    'to.enter',\n    'action.end',\n    '*.end'\n]\n\nTransition.order = defaultOrder;\n\nexport default\n{\n    /**\n     * Create the Transition object\n     *\n     * - Set up variables, callbacks and queue\n     * - Determine paths to relevant callbacks\n     * - Build State and Action Event objects\n     * - Pre-bind all handlers\n     * - Append to queue\n     *\n     * @param {StateMachine}    fsm\n     * @param {string}          action\n     * @param {Array}           params\n     * @returns {Transition}\n     */\n    create:function (fsm, action, params)\n    {\n        // transition\n        var from    = fsm.state;\n        var to      = fsm.actions.get(action)[from];\n        var target  = fsm.target;\n\n        // handle to being a function\n        if(isFunction(to))\n        {\n            let actions = fsm.getActionsFor();\n            let state   = to.apply(target, [actions].concat(params));\n            let action  = fsm.getActionsFor(state);\n            // TODO debug this! It's wrong\n            if( ! action )\n            {\n                throw new Error('Cannot go to state \"' +state+ '\" from current state \"' +from+ '\"');\n            }\n        }\n\n        // callbacks\n        var callbacks =\n        {\n            cancel   :fsm.cancel.bind(fsm),\n            pause    :fsm.pause.bind(fsm),\n            resume   :fsm.resume.bind(fsm),\n            complete :fsm.complete.bind(fsm)\n        }\n\n        // build handlers array\n        var queue   = [];\n        Transition.order.map( token =>\n        {\n            // determine path variables\n            let [subject, verb]     = token.split('.'); // i.e. *.start, to.enter, action.end\n            let type                = /^(start|end)$/.test(verb) ? 'action' : 'state';\n            let name;\n            if(subject === '*')\n            {\n                name = '*';\n            }\n            else if(type == 'action')\n            {\n                name = action;\n            }\n            else\n            {\n                name = verb === 'leave'\n                    ? from\n                    : to;\n            }\n\n            // get handlers\n            let path = [type, name, verb].join('.');\n            let handlers = fsm.handlers.get(path);\n            if(handlers)\n            {\n                // bind handlers, targets and params ready for dispatch\n                handlers = handlers.map( handler =>\n                {\n                    return function()\n                    {\n                        let event = Events.create(type, callbacks, name, verb, from, to);\n                        handler.apply(target, [event].concat(params));\n                    }\n                });\n\n                // add to queue\n                queue = queue.concat(handlers);\n            }\n\n        });\n\n        // create\n        return new Transition(action, from, to, queue, callbacks);\n    },\n\n    /**\n     * Set the default sort order for transitions\n     *\n     * @param {Array} order\n     */\n    setOrder:function(order)\n    {\n        Transition.order = order || defaultOrder;\n    },\n\n    /**\n     * Get the current sot order for the transitions\n     *\n     * @returns {string[]}\n     */\n    getOrder:function()\n    {\n        return Transition.order;\n    }\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/Transition.js\n **/","function noop () { }\n\n/**\n * @prop {string}  type     The Event type; i.e. state or action\n * @prop {string}  name     The Event subject/name; i.e. intro (state) or next (action)\n * @prop {string}  verb     The Event verb; i.e. leave/enter (state) or start/end (action)\n * @prop {string}  from     The from state\n * @prop {string}  to       The to state\n */\nlet event =\n{\n    type    : null,\n    name    : null,\n    verb    : null,\n    from    : null,\n    to      : null,\n\n    pause   : noop,\n    resume  : noop,\n    cancel  : noop\n};\n\nfunction initialize (event, callbacks, type, name, verb, from, to)\n{\n    event.type      = type;\n    event.name      = name;\n    event.verb      = verb;\n    event.from      = from;\n    event.to        = to;\n\n    event.pause     = callbacks.pause;\n    event.resume    = callbacks.resume;\n    event.cancel    = callbacks.cancel;\n    event.complete  = callbacks.complete;\n}\n\nexport function ActionEvent (callbacks, name, verb, from, to)\n{\n    initialize(this, callbacks, 'action' ,name, verb, from, to);\n}\nActionEvent.prototype = event;\n\nexport function StateEvent (callbacks, name, verb, from, to)\n{\n    initialize(this, callbacks, 'state' ,name, verb, from, to);\n}\nStateEvent.prototype = event;\n\nexport function ChangeEvent (type)\n{\n    this.type = type;\n}\n\nChangeEvent.prototype =\n{\n    type: ''\n}\n\nexport default\n{\n    create: function(type, callbacks, name, verb, from, to)\n    {\n        var fn = type == 'state'\n            ? StateEvent\n            : ActionEvent;\n        return new fn(callbacks, name, verb, from, to);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/Events.js\n **/"],"sourceRoot":""}