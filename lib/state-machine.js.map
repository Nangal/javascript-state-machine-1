{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 6ea2e0c6e412d3ed0c5f","webpack:///./src/StateMachine.js","webpack:///./src/utils/ValueMap.js","webpack:///./src/utils/utils.js","webpack:///./src/Transition.js","webpack:///./src/Events.js","webpack:///./src/utils/handlers.js"],"names":["StateMachine","scope","config","arguments","length","state","states","transitions","actions","handlers","initialize","parse","prototype","transition","addStates","initial","Array","isArray","map","matches","match","name","from","op","to","add","hasOwnProperty","on","defer","defaults","Object","assign","action","order","update","namespace","type","key","value","signature","event","dispatch","do","can","isPaused","rest","create","exec","go","force","has","end","getActionForState","debug","console","info","warn","cannot","is","indexOf","getStatesFor","getActionsFor","keys","asMap","get","isStarted","isTransitioning","paused","isComplete","final","pause","resume","cancel","clear","reset","set","remove","id","fn","result","log","paths","path","index","target","targets","Error","insert","off","fsm","addState","push","ValueMap","data","undefined","values","obj","shift","String","split","pop","parent","arr","join","splice","isObject","isString","isFunction","isDefined","isUndefined","trim","toString","call","Function","replace","Transition","handler","params","vars","apply","queue","all","token","Event","concat","ActionEvent","StateEvent","SystemEvent","TransitionEvent","lookup","namespaces","start","change","complete","events","enter","leave","segments","isState","isAction","getTargets","determineValue","test","ParseResult","forEach","segment","i","char"],"mappings":"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","file":"state-machine.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"StateMachine\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StateMachine\"] = factory();\n\telse\n\t\troot[\"StateMachine\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6ea2e0c6e412d3ed0c5f\n **/","import ValueMap from './utils/ValueMap';\nimport Transition from './Transition';\nimport { SystemEvent, TransitionEvent } from './Events';\nimport { isString, isFunction } from './utils/utils';\nimport { parse } from './utils/handlers'\n\nexport default function StateMachine (scope, config)\n{\n    // allow [scope, config] or [config] as parameters\n    if(arguments.length == 1)\n    {\n        [config, scope] = [scope, null];\n    }\n\n    // assignment\n    this.scope          = scope;\n    this.state          = '';\n    this.states         = [];\n    this.transitions    = new ValueMap();\n    this.actions        = new ValueMap();\n    this.handlers       = new ValueMap();\n\n    // initialize\n    if(config)\n    {\n        this.initialize(config);\n    }\n}\n\nStateMachine.parse = parse;\n\n/**\n * StateMachine prototype\n *\n * The property examples below illustrate a 4-state machine, with states:\n *\n * - intro > settings > summary > end\n *\n * And actions:\n *\n * - back | next | restart | finish\n */\nStateMachine.prototype =\n{\n    // ------------------------------------------------------------------------------------------------\n    // properties\n\n        /**\n         * Available state names\n         *\n         * - [\n         *     intro,\n         *     settings,\n         *     summary,\n         *     final\n         *   ]\n         *\n         * @var {string[]}\n         */\n        states      : null,\n\n        /**\n         * Available transitions for each action\n         *\n         * action.from => to\n         *\n         * - next: {\n         *     intro: settings,\n         *     settings: summary\n         *   },\n         * - back: {\n         *     settings: intro\n         *   },\n         * - restart: {\n         *     summary:intro\n         *   },\n         * - finish: {\n         *     summary:final\n         *   },\n         *\n         * Transitions can also be functions\n         *\n         * - next: {\n         *     intro: function() { return '<random state>' } // jump to a random state\n         *   }\n         *\n         * @var {ValueMap}\n         */\n        transitions : null,\n\n        /**\n         * Actions that are available to be called from each state\n         *\n         * state => [ action, action, ... ]\n         *\n         * - intro: [\n         *     'next'\n         *   ],\n         * - settings: [\n         *     'next',\n         *     'back'\n         *   ],\n         * - summary: [\n         *     'restart'\n         *     'finish',\n         *   ]\n         *\n         * Actions can also be expressed as wildcards\n         *\n         * - intro: [\n         *     '*' // any action is allowed from intro\n         *   ]\n         *\n         * @var {ValueMap}\n         */\n        actions     : null,\n\n        /**\n         * Handler functions that should be called on each action event / state change\n         *\n         * name.type => [ handler, handler, ... ]\n         *\n         * - next: {\n         *   - start: [\n         *       hideModal\n         *     ],\n         *   - end: [\n         *       showModal\n         *     ]\n         *   },\n         * - summary: {\n         *   - enter: [\n         *       resetForm\n         *     ],\n         *   - leave: [\n         *       validateForm,\n         *       postData,\n         *     ]\n         *   },\n         *   ...\n         *\n         * @var {ValueMap}\n         */\n        handlers    : null,\n\n        /**\n         * The current state\n         *\n         * @var {string}\n         */\n        state       : '',\n\n        /**\n         * Any active Transition object that is driving the state change\n         *\n         * @var {Transition}\n         */\n        transition  : null,\n\n        /**\n         * The scope in which to call all handlers\n         *\n         * @var {*}\n         */\n        scope       : null,\n\n        /**\n         * The original config object\n         *\n         * @var {Object}\n         */\n        config      : null,\n\n\n    // ------------------------------------------------------------------------------------------------\n    // private methods\n\n        /**\n         * Initialize the FSM with a config object\n         *\n         * @private\n         * @param config\n         */\n        initialize:function (config)\n        {\n            // assign config\n            this.config     = config;\n\n            // scope\n            if(config.scope)\n            {\n                this.scope = config.scope;\n            }\n\n            // pre-collate all states\n            addStates(this, 'from', config.transitions);\n            addStates(this, 'to', config.transitions);\n\n            // initial state\n            if( ! config.initial )\n            {\n                config.initial = this.states[0];\n            }\n\n            // add transitions\n            if(Array.isArray(config.transitions))\n            {\n                config.transitions.map( transition =>\n                {\n                    // shorthand\n                    if(isString(transition))\n                    {\n                        let matches = transition.match(/(\\w+)\\s*[|:=]\\s*(\\w+)\\s*([<>-])\\s*(\\w.*)/);\n                        let [,name, from, op, to] = matches;\n                        if(op === '-')\n                        {\n                            this.add(name, from, to);\n                            this.add(name, to, from);\n                            return;\n                        }\n                        if(op === '<')\n                        {\n                            [from, to] = [to, from];\n                        }\n                        this.add(name, from, to);\n                    }\n\n                    // keys\n                    else\n                    {\n                        this.add(transition.name, transition.from, transition.to);\n                    }\n                });\n            }\n\n            // add handlers\n            if(config.handlers)\n            {\n                for(let name in config.handlers)\n                {\n                    if(config.handlers.hasOwnProperty(name))\n                    {\n                        this.on(name, config.handlers[name]);\n                    }\n                }\n            }\n\n            // start automatically unless defer is set to true\n            if( ! config.defer )\n            {\n                this.state = config.initial;\n            }\n\n            /**\n             * Sets defaults for various declarations\n             *\n             * @type {Object}\n             */\n            config.defaults = Object.assign({\n\n                // initialize event\n                initialize  :'initialize',\n\n                // handler defaults\n                action      :'start',\n                state       :'enter'\n\n            }, config.defaults);\n\n            /**\n             * Sets the default order to run transition callbacks in\n             *\n             * @type {string[]} type.target\n             */\n            config.order = config.order ||\n            [\n                'action.*.start',\n                'action.{action}.start',\n                'state.{*}.{action}',\n                'state.{from}.{action}',\n                'state.{from}.leave',\n                'state.*.leave',\n                'state.*.enter',\n                'state.{to}.enter',\n                'action.{action}.end',\n                'action.*.end'\n            ];\n        },\n\n        /**\n         * Dispatch an event\n         *\n         * @param   {string}    namespace\n         * @param   {string}    type\n         * @param   {string}    key\n         * @param   {*}         value\n         * @returns {StateMachine}\n         */\n        update: function (namespace, type, key = '', value = null)\n        {\n            let signature = namespace + '.' + type;\n            let event = namespace === 'system'\n                ? new SystemEvent(type, key, value)\n                : new TransitionEvent(type);\n            this.dispatch(signature, event);\n            return this;\n        },\n\n\n    // ------------------------------------------------------------------------------------------------\n    // api\n\n        /**\n         * Attempt to run an action, resulting in a transition to a state\n         *\n         * @param   {string}    action\n         * @param   {*[]}       rest\n         * @returns {boolean}\n         */\n        do: function (action, ...rest)\n        {\n            if(this.can(action) && !this.isPaused())\n            {\n                this.transition = Transition.create(this, action, rest);\n                if(action === this.config.defaults.initialize)\n                {\n                    this.update('system', 'initialize');\n                }\n                this.update('system', 'update', 'transition', this.transition);\n                this.transition.exec();\n                return true;\n            }\n            return false;\n        },\n\n        /**\n         * Attempt to go to a state\n         *\n         * Finds if an appropriate transition exists, then calls the related action if it does\n         *\n         * @param   {string}    state\n         * @param   {boolean}   [force]\n         * @returns {boolean}\n         */\n        go: function (state, force = false)\n        {\n            if(this.has(state))\n            {\n                if(force)\n                {\n                    this.transition = Transition.force(this, state);\n                    return this.end();\n                }\n                var action = this.getActionForState(state);\n                if(action)\n                {\n                    return this.do(action);\n                }\n                this.config.debug && console.info('No transition exists from \"%s\" to \"%s\"', this.state, state);\n            }\n            else\n            {\n                this.config.debug && console.warn('No such state \"%s\"', state);\n            }\n            return false;\n        },\n\n        /**\n         * Query a transition to see if a named action is available\n         *\n         * @param   {string}    action\n         * @returns {boolean}\n         */\n        can: function (action)\n        {\n            if( ! this.actions.has(action) )\n            {\n                this.config.debug && console.warn('No such action \"%s\"', action);\n            }\n            return !! this.transitions.has(this.state, action);\n        },\n\n        /**\n         * Query a transition to see if a named action is unavailable\n         *\n         * @param   {string}    action\n         * @returns {boolean}\n         */\n        cannot: function (action)\n        {\n            return ! this.can(action);\n        },\n\n        /**\n         * Test if the current state is the same as the supplied one\n         *\n         * @param   {string}    state       A state name to compare against the current state\n         * @returns {boolean}\n         */\n        is: function (state)\n        {\n            if(this.states.indexOf(state) === -1)\n            {\n                this.config.debug && console.warn('No such state \"%s\"', state);\n            }\n            return state === this.state;\n        },\n\n        /**\n         * Test if a state exists\n         *\n         * @param   {string}    state\n         * @return  {boolean}\n         */\n        has: function(state)\n        {\n            return this.states.indexOf(state) !== -1;\n        },\n\n        /**\n         * Get the available \"to\" states for the current or supplied state\n         *\n         * @param   {string}    [state]     Optional name of a state to get states for. Defaults to the current state\n         * @returns {string[]}              An array of string states\n         */\n        getStatesFor: function (state = null)\n        {\n            state       = state || this.state;\n            let actions = this.getActionsFor(state, true);\n            return Object.keys(actions).map( name => actions[name] );\n        },\n\n        /**\n         * Get the available actions (or actions and states) for the current or supplied state\n         *\n         * @param   {string}    [state]     Optional name of a state to get actions for. Defaults to the current state\n         * @param   {boolean}   [asMap]     Optional boolean to return a Object of action:state properties. Defaults to false\n         * @returns {string[]|Object}       An array of string actions, or a hash of action:states\n         */\n        getActionsFor: function (state = '', asMap = false)\n        {\n            state       = state || this.state;\n            let actions = this.transitions.get(state || this.state);\n            if(asMap)\n            {\n                let states  = {};\n                actions.map( action =>\n                {\n                    states[action] = this.actions.get(action + '.' + state);\n                });\n                return states;\n            }\n            else\n            {\n                return actions;\n            }\n        },\n\n        getActionForState: function (state)\n        {\n            if(this.has(state))\n            {\n                let actions = this.getActionsFor(state, true);\n                for(let action in actions)\n                {\n                    if(actions[action] === state)\n                    {\n                        return action;\n                    }\n                }\n            }\n            return null;\n        },\n\n\n    // ------------------------------------------------------------------------------------------------\n    // flags\n\n        /**\n         * Test if the FSM has started\n         *\n         * @returns {boolean}\n         */\n        isStarted: function ()\n        {\n            return this.state !== '';\n        },\n\n        /**\n         * Test if the FSM is transitioning\n         *\n         * @returns {boolean}\n         */\n        isTransitioning: function ()\n        {\n            return !! this.transition;\n        },\n\n        /**\n         * Test if the FSM is paused (whilst transitioning)\n         *\n         * @returns {boolean}\n         */\n        isPaused: function ()\n        {\n            return this.transition\n                ? this.transition.paused\n                : false;\n        },\n\n        /**\n         * Test if the FSM is on the \"final\" state\n         *\n         * @returns {boolean}\n         */\n        isComplete: function ()\n        {\n            return this.state === this.config.final;\n        },\n\n\n    // ------------------------------------------------------------------------------------------------\n    // transitions\n\n        /**\n         * Pause any current transition\n         *\n         * @returns {StateMachine}\n         */\n        pause: function ()\n        {\n            if(this.transition && !this.isPaused())\n            {\n                this.transition.pause();\n                this.update('transition', 'pause');\n                this.update('system', 'update', 'pause', true);\n            }\n            return this;\n        },\n\n        /**\n         * Resume any current transition\n         *\n         * @returns {StateMachine}\n         */\n        resume: function ()\n        {\n            if(this.transition && this.isPaused())\n            {\n                this.update('transition', 'resume');\n                this.update('system', 'update', 'pause', false);\n                this.transition.resume();\n            }\n            return this;\n        },\n\n        /**\n         * Cancel any current transition\n         *\n         * @returns {StateMachine}\n         */\n        cancel: function ()\n        {\n            if(this.transition)\n            {\n                if(this.isPaused())\n                {\n                    this.update('system', 'update', 'pause', false);\n                }\n                this.state = this.transition.from;\n                this.transition.clear();\n                delete this.transition;\n                this.update('transition', 'cancel');\n                this.update('system', 'update', 'transition', null);\n            }\n            return this;\n        },\n\n        /**\n         * End any current transition, skipping remaining handlers\n         *\n         * @returns {StateMachine}\n         */\n        end: function ()\n        {\n            if(this.transition)\n            {\n                if(this.isPaused())\n                {\n                    this.update('system', 'update', 'pause', false);\n                }\n                this.state = this.transition.to;\n                this.transition.clear();\n                delete this.transition;\n                this.update('system', 'change', 'state', this.state);\n                this.update('system', 'update', 'state', this.state);\n                if(this.isComplete())\n                {\n                    this.update('system', 'complete');\n                }\n                this.update('system', 'update', 'transition', null);\n            }\n            return this;\n        },\n\n        /**\n         * Reset the FSM to the initial, or supplied, state\n         *\n         * @returns {StateMachine}\n         */\n        reset:function(initial = '')\n        {\n            let state = initial || this.config.initial;\n            this.update('system', 'reset');\n            if(this.transition)\n            {\n                if(this.isPaused())\n                {\n                    this.update('system', 'update', 'pause', false);\n                }\n                this.transition.clear();\n                delete this.transition;\n                this.update('transition', 'cancel');\n                this.update('system', 'update', 'transition', null);\n            }\n            if(this.state !== state)\n            {\n                this.state = state;\n                this.update('system', 'change', 'state', this.state);\n                this.update('system', 'update', 'state', this.state);\n            }\n            return this;\n        },\n\n\n    // ------------------------------------------------------------------------------------------------\n    // actions\n\n        /**\n         * Add a transition\n         *\n         * @param   {string}    action\n         * @param   {string}    from\n         * @param   {string}    to\n         * @return  {StateMachine}\n         */\n        add: function (action, from, to)\n        {\n            this.actions.set(action + '.' + from, to);\n            this.transitions.add(from, action);\n            return this;\n        },\n\n        /**\n         * Remove a transition\n         *\n         * @param   {string}    action\n         * @param   {string}    from\n         * @param   {string}    to\n         * @return  {StateMachine}\n         */\n        remove: function (action, from, to)\n        {\n            this.states.remove(action, from);\n            return this;\n        },\n\n\n    // ------------------------------------------------------------------------------------------------\n    // handlers\n\n        /**\n         * Add an event handler\n         *\n         * Event handler signatures are build from the following grammar:\n         *\n         * - token      foo\n         * - property   .foo\n         * - event      :foo\n         * - action     @foo\n         * - targets    (foo|bar|baz)\n         *\n         * For example:\n         *\n         * - change\n         * - transition.pause\n         * - next:end\n         * - (a|b)@next\n         * - a@next\n         *\n         * The main event types are unique, so can be used without the namespace:\n         *\n         * - change\n         * - pause\n         * - complete\n         * - ...\n         *\n         * If your states and events are unique, they can also be used without qualification.\n         *\n         * See docs and demo for more information\n         *\n         * @param   {string}        id\n         * @param   {Function}      fn\n         * @return  {StateMachine}\n         */\n        on: function (id, fn)\n        {\n            /** @type {ParseResult} */\n            let result = parse(this, id);\n\n            if(this.config.debug)\n            {\n                console.log('StateMachine on: ' + id, [result.namespace, result.type], result.paths)\n            }\n\n            result.paths.map( (path, index) =>\n            {\n                let target = result.targets[index];\n\n                // warn for invalid actions / states\n                if(target !== '*')\n                {\n                    if(result.namespace === 'state')\n                    {\n                        if(this.states.indexOf(target) === -1)\n                        {\n                            this.config.debug && console.warn('StateMachine: Warning assigning state.%s handler; no such state \"%s\"', result.type, target);\n                        }\n                    }\n                    else if(result.namespace === 'action')\n                    {\n                        if(!this.actions.has(target))\n                        {\n                            this.config.debug && console.warn('StateMachine: Warning assigning action.%s handler; no such action \"%s\"', result.type, target);\n                        }\n                    }\n                }\n\n                // check handler is a function\n                if(!isFunction(fn))\n                {\n                    throw new Error('Error assigning ' +result.namespace+ '.' +result.type+ ' handler; callback is not a Function', fn);\n                }\n\n                // assign\n                this.handlers.insert(path, fn);\n            });\n\n            return this;\n        },\n\n        off: function (id, fn)\n        {\n            let result = parse(this, id);\n            result.paths.map( path =>\n            {\n                this.handlers.remove(path, fn)\n            });\n        },\n\n        dispatch: function(path, event)\n        {\n            this.config.debug && console.info('StateMachine: dispatch \"%s\"', path);\n            let handlers = this.handlers.get(path);\n            if(handlers)\n            {\n                handlers.map(fn => fn(event, this) );\n            }\n        }\n\n};\n\n/**\n * Parses config and adds unique state names to states array\n *\n * @param {StateMachine}    fsm\n * @param {string}          key\n * @param {Object[]}        transitions\n */\nfunction addStates(fsm, key, transitions)\n{\n    if(transitions)\n    {\n        transitions.map( event => addState(fsm, event[key]) );\n    }\n}\n\nfunction addState (fsm, state)\n{\n    if (isString(state) && fsm.states.indexOf(state) === -1)\n    {\n        fsm.states.push(state);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/StateMachine.js\n **/","import {isObject, isArray, isDefined, isUndefined} from './utils';\n\n/**\n * Utility class to create, modify and delete nested hashes and values\n *\n * @constructor\n */\nexport default function ValueMap (data)\n{\n    this.data = data || {};\n}\n\nValueMap.prototype =\n{\n    data: null,\n\n    set: function (path, value)\n    {\n        set(this.data, path, value);\n        return this;\n    },\n\n    add:function(path, value)\n    {\n        add(this.data, path, value);\n        return this;\n    },\n\n    insert:function(path, value)\n    {\n        insert(this.data, path, value);\n        return this;\n    },\n\n    get:function(path)\n    {\n        return get(this.data, path);\n    },\n\n    has: function (path, value = undefined)\n    {\n        return has(this.data, path, value)\n    },\n\n    indexOf: function (path, value)\n    {\n        return indexOf(this.data, path, value)\n    },\n\n    remove: function (path, value = undefined)\n    {\n        remove(this.data, path, value);\n        return this;\n    },\n\n    keys:function(path)\n    {\n        return Object.keys(get(this.data, path));\n    },\n\n    values:function(path)\n    {\n        return values(this.data, path);\n    }\n\n};\n\nfunction create(obj, keys)\n{\n    let key;\n    while(keys.length)\n    {\n        key = keys.shift();\n        if( ! isObject(obj[key]) )\n        {\n            obj[key] = {};\n        }\n        obj = obj[key];\n    }\n    return obj;\n}\n\nexport function set(obj, path, value, index = -1)\n{\n    let keys = String(path).split('.'),\n        key  = keys.pop();\n    obj = create(obj, keys);\n    obj[key] = value;\n}\n\nfunction add(obj, path, value)\n{\n    let keys = String(path).split('.'),\n        key  = keys.pop();\n    obj = create(obj, keys);\n    if( ! isArray(obj[key]) )\n    {\n        obj[key] = [];\n    }\n    obj[key].push(value);\n}\n\nfunction insert(obj, path, value)\n{\n    let keys = String(path).split('.'),\n        key  = keys.pop();\n    obj = create(obj, keys);\n    if( ! isArray(obj[key]) )\n    {\n        obj[key] = [];\n    }\n    let parent = obj[key],\n        index = parent.indexOf(value);\n    if(index === -1)\n    {\n        parent.push(value);\n    }\n    else\n    {\n        parent[index] = value;\n    }\n}\n\nexport function get(obj, path)\n{\n    if(isUndefined(path) || path == '')\n    {\n        return obj;\n    }\n\n    let key,\n        keys = String(path).split('.');\n    while(keys.length > 1)\n    {\n        key = keys.shift();\n        if( ! obj.hasOwnProperty(key) )\n        {\n            return;\n        }\n        obj = obj[key];\n    }\n    key = keys.shift();\n    return obj[key];\n}\n\nexport function has(obj, path, value)\n{\n    let parent = get(obj, path);\n    return !! (isArray(parent) && isDefined(value)\n        ? parent.indexOf(value) !== -1\n        : isUndefined(value)\n            ? isDefined(parent)\n            : parent === value);\n}\n\nexport function indexOf (obj, path, value)\n{\n    let arr = get(obj, path);\n    if(isArray(arr))\n    {\n        return arr.indexOf(value);\n    }\n    return -1;\n}\n\nexport function remove(obj, path, value)\n{\n    let parent = obj,\n        keys = String(path || '').split('.'),\n        key = keys.pop();\n\n    if(keys.length)\n    {\n        parent = get(obj, keys.join('.'))\n    }\n    if(isDefined(value) && isArray(parent[key]))\n    {\n        let target = parent[key];\n        var index = target.indexOf(value);\n        if(index > -1)\n        {\n            target.splice(index, 1);\n            if(target.length === 0)\n            {\n                delete parent[key];\n            }\n            return true;\n        }\n        return false;\n    }\n    else\n    {\n        if(isObject(parent) && obj.hasOwnProperty(key))\n        {\n            delete parent[key];\n            return true;\n        }\n    }\n    return false\n}\n\nexport function values(obj, path)\n{\n    var values = [];\n    var target = get(obj, path);\n    if(isObject(target))\n    {\n        for(var name in target)\n        {\n            if(target.hasOwnProperty(name))\n            {\n                values.push(target[name]);\n            }\n        }\n    }\n    return values;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/utils/ValueMap.js\n **/","export function isObject (value)\n{\n    return Object.prototype.toString.call(value) === '[object Object]';\n}\n\nexport function isArray (value)\n{\n    return value instanceof Array;\n}\n\nexport function isString (value)\n{\n    return typeof value === 'string';\n}\n\nexport function isFunction(value)\n{\n    return value instanceof Function;\n}\n\nexport function isDefined (value)\n{\n    return typeof value !== 'undefined';\n}\n\nexport function isUndefined (value)\n{\n    return typeof value === 'undefined';\n}\n\nexport function trim (value)\n{\n    return String(value || '').replace(/^\\s+|\\s+$/g, '');\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/utils/utils.js\n **/","import { StateEvent, ActionEvent } from './Events';\nimport { isFunction } from './utils/utils';\n\n/**\n * Transition class\n *\n * Responsible for managing events in the flow from state to state.\n *\n * This adds all handlers for the current action start/end and state from/to to an array:\n *\n * - <namespace>.<target>.<type>[]\n *\n * So going from state \"a\" to state \"b\" with action \"next\" should build:\n *\n * - action.*.start[]\n * - action.next.start[]\n * - state.a.leave[]\n * - state.*.leave[]\n * - state.*.enter[]\n * - state.b.enter[]\n * - action.next.end[]\n * - action.*.end[]\n *\n * This can be changed by passing in an order array in fsm.config\n *\n * Event handlers will receive an Event object, along with any passed parameters (from do()) as ...rest parameters.\n *\n * From a callback, you can:\n *\n * - return false to cancel the transition\n * - return true to pause the transition\n * - not return a value (the transition continues)\n *\n * Transitions can also be paused, resumed, or cancelled by calling\n * the appropriate method on, or from:\n *\n * - the event\n * - the transition\n * - the state machine\n *\n * Cancelled transitions will reset the FSM to the previous \"from\" state\n *\n * When the last callback has fired, the main FSM's end() handler will be called and the state will updated\n *\n * @param {StateMachine}    fsm\n * @param {string}          action\n * @param {string}          from\n * @param {string}          to\n */\nfunction Transition (fsm, action, from, to)\n{\n    this.fsm        = fsm;\n    this.action     = action;\n    this.from       = from;\n    this.to         = to;\n    this.clear();\n}\n\n/**\n * @prop {StateMachine}    fsm\n * @prop {string}          action\n * @prop {string}          from\n * @prop {string}          to\n * @prop {Function[]}      handlers\n */\nTransition.prototype =\n{\n    fsm         : null,\n    action      : '',\n    from        : '',\n    to          : '',\n    paused      : false,\n    handlers    : null,\n\n    clear: function ()\n    {\n        this.paused = false;\n        this.handlers = [];\n    },\n\n    /**\n     * Execute the next event's callbacks\n     * @returns {*}\n     */\n\texec: function ()\n\t{\n\t    if( ! this.paused )\n        {\n            if(this.handlers.length)\n            {\n                var handler = this.handlers.shift();\n                var state = handler();\n                if(state === false)\n                {\n                    return this.fsm.cancel();\n                }\n                if(state === true)\n                {\n                    return this.fsm.pause();\n                }\n                this.exec();\n            }\n            else\n            {\n                this.fsm.end();\n            }\n        }\n        return this;\n\t},\n\n    pause: function ()\n    {\n        this.paused = true;\n        return this;\n    },\n\n    resume: function ()\n    {\n        this.paused = false;\n        return this.exec();\n    }\n};\n\nexport default\n{\n    /**\n     * Create the Transition object\n     *\n     * - Set up variables, and queue\n     * - Determine paths to relevant handlers\n     * - Build State and Action Event objects\n     * - Pre-bind all handlers\n     * - Append to queue\n     *\n     * @param {StateMachine}    fsm\n     * @param {string}          action\n     * @param {Array}           params\n     * @returns {Transition}\n     */\n    create:function (fsm, action, params)\n    {\n        // transition properties\n        let scope   = fsm.scope;\n        let from    = fsm.state;\n        let to      = fsm.actions.get(action)[from];\n        let vars    = {action, to, from};\n\n        // handle \"to\" being a function\n        if(isFunction(to))\n        {\n            to = to.apply(scope, params);\n            if(fsm.states.indexOf(to) === -1)\n            {\n                throw new Error('Invalid \"to\" state \"' +to+ '\"');\n            }\n        }\n\n        // transition\n        let queue       = [];\n        let transition  = new Transition(fsm, action, from, to);\n\n        // build handlers array\n        fsm.config.order.map( path =>\n        {\n            // replace path tokens\n            path = path.replace(/{(\\w+)}/g, (all, token) => vars[token]);\n            let handlers = fsm.handlers.get(path);\n\n            // do it!\n            if(handlers)\n            {\n                let [namespace, target, type] = path.split('.');\n                handlers = handlers.map( handler =>\n                {\n                    // build event object\n                    let Event = namespace === 'state' ? StateEvent : ActionEvent;\n                    let event = new Event(type, target, transition);\n\n                    // pre-bind handlers, scopes and params\n                    // this way scope and params don't need to be passed around\n                    // and the call from Transition is always just `value = handler()`\n                    return function()\n                    {\n                        return handler.apply(scope, [event, fsm].concat(params));\n                    }\n                });\n\n                // add to queue\n                queue = queue.concat(handlers);\n            }\n        });\n\n        // return\n        transition.handlers = queue;\n        return transition;\n    },\n\n    force: function(fsm, state)\n    {\n        let transition = new Transition(fsm, '', fsm.state, state);\n        transition.paused = fsm.transition ? fsm.transition.paused : false;\n        return transition;\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/Transition.js\n **/","// ------------------------------------------------------------------------------------------------\n// setup\n\n    /**\n     * @prop {string}       namespace   The Event namespace; i.e. state or action\n     * @prop {string}       type        The Event type;      i.e. leave/enter (state) or start/end (action)\n     * @prop {string}       target      The Event target;    i.e. intro (state), next (action), or * (all states or types)\n     * @prop {Transition}   transition  The transition which generated the event\n     */\n    let event =\n    {\n        // properties\n        namespace   : null,\n        type        : null,\n        target      : null,\n        transition          : null\n    };\n\n    function initialize (event, namespace, type, target, transition)\n    {\n        event.namespace     = namespace;\n        event.type          = type;\n        event.target        = target;\n        event.transition    = transition;\n    }\n\n\n// ------------------------------------------------------------------------------------------------\n// ActionEvent\n\n    export function ActionEvent (type, target, transition)\n    {\n        initialize(this, 'action' ,type, target, transition);\n    }\n    ActionEvent.prototype = event;\n\n\n// ------------------------------------------------------------------------------------------------\n// StateEvent\n\n    export function StateEvent (type, target, transition)\n    {\n        initialize(this, 'state' ,type, target, transition);\n    }\n    StateEvent.prototype = event;\n\n\n// ------------------------------------------------------------------------------------------------\n// SystemEvent\n\n    export function SystemEvent (type, key, value)\n    {\n        this.type   = type;\n        this.key    = key;\n        this.value  = value;\n    }\n\n    SystemEvent.prototype =\n    {\n        namespace   : 'system',\n        type        : '',\n        key         : '',\n        value       : null\n    };\n\n\n// ------------------------------------------------------------------------------------------------\n// TransitionEvent\n\n    export function TransitionEvent (type)\n    {\n        this.type = type;\n    }\n\n    TransitionEvent.prototype =\n    {\n        namespace   : 'transition',\n        type        : ''\n    };\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/Events.js\n **/","let lookup =\n{\n    namespaces:\n    {\n        start   :'system',\n        change  :'system',\n        update  :'system',\n        complete:'system',\n        reset   :'system',\n        add     :'system',\n        remove  :'system',\n\n        pause   :'transition',\n        resume  :'transition',\n        cancel  :'transition'\n    },\n\n    events:\n    {\n        start   :'action',\n        end     :'action',\n        enter   :'state',\n        leave   :'state'\n    }\n};\n\n/**\n * Parses an event handler id into namespace, type, and target variables\n *\n * @param {StateMachine}    fsm\n * @param {string}          id\n * @return {ParseResult}\n */\nexport function parse(fsm, id)\n{\n    // variables\n    let defaults = fsm.config.defaults,\n        segments,\n        namespace,\n        type,\n        targets;\n\n    // utility functions\n    function isState(value) {\n        return fsm.states.indexOf(value) !== -1;\n    }\n\n    function isAction(value) {\n        return fsm.actions.has(value);\n    }\n\n    function getTargets(value) {\n        return value ? value.match(/\\w[-\\w]*/g) : ['*'];\n    }\n\n    function determineValue(value) {\n\n        // is namespace, i.e. system, transition, state, action\n        if(/^(system|transition|state|action)$/.test(value))\n        {\n            namespace = value;\n        }\n\n        // is shortcut, i.e. update, change, pause, cancel\n        else if(value in lookup.namespaces)\n        {\n            namespace = lookup.namespaces[value];\n            type = value;\n        }\n\n        // is state or action, i.e. a, next\n        else if (isState(value) || isAction(value))\n        {\n            if(!namespace)\n            {\n                namespace = isState(value)\n                    ? 'state'\n                    : 'action';\n            }\n\n            // special case for state with action\n            if(namespace === 'state' && isAction(value))\n            {\n                type = value;\n            }\n\n            if(!targets)\n            {\n                targets = getTargets(value);\n            }\n        }\n\n        // action event, i.e. :event\n        else if(/^(enter|leave)$/.test(value))\n        {\n            type = value;\n        }\n    }\n\n    // process\n    segments    = id.match(/:\\w+|@\\w+|\\(.+?\\)|\\.\\w+|\\w+/g);\n\n    // return an empty result if no matches\n    if(!segments)\n    {\n        return new ParseResult();\n    }\n\n    /**\n     * This is the engine of the parse process\n     *\n     * The regex above matches the grammar of the expression into an array:\n     *\n     * - transition.pause   => [\"transition\", \".pause\"]\n     * - (a|b)@next         => [\"(a|b)\", \"@next\"]\n     * - a@next             => [\"a\", \"@next\"]\n     *\n     * Each segment is then analysed for its type and content, either directly\n     * or via the utility functions above which update the local variables.\n     */\n    segments.forEach(function (segment, i, segments)\n    {\n        // variables\n        let char    = segment[0];\n        let values  = segment.match(/\\w+/g);\n        let value   = values[0];\n        switch(char)\n        {\n            // event\n            case ':':\n                namespace   = lookup.events[value];\n                type        = value;\n                break;\n\n            // action\n            case '@':\n                namespace   = 'state';\n                type        = value;\n                break;\n\n            // targets\n            case '(':\n                targets = values;\n                namespace = isState(values[0]) ? 'state' : 'action';\n                break;\n\n            // property\n            case '.':\n                determineValue(value);\n                break;\n\n            // single word\n            default:\n                determineValue(segment);\n        }\n    });\n\n    // final determination\n    if(!targets)\n    {\n        targets = getTargets();\n    }\n\n    if(!namespace)\n    {\n        namespace = isState(targets[0]) ? 'state' : 'action';\n    }\n\n    if(!type)\n    {\n        type = defaults[namespace];\n    }\n\n    // return result\n    return new ParseResult(namespace, type, targets);\n}\n\nfunction ParseResult (namespace, type, targets)\n{\n    if(namespace)\n    {\n        this.namespace  = namespace;\n        this.type       = type;\n        this.targets    = targets;\n        this.paths      = targets.map( target => {\n            return namespace === 'action' || namespace === 'state'\n                ? [namespace, target, type].join('.')\n                : namespace + '.' + type;\n        });\n    }\n}\n\nParseResult.prototype =\n{\n    namespace   :'',\n    type        :'',\n    targets     :[],\n    paths       :[]\n};\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/utils/handlers.js\n **/"],"sourceRoot":""}